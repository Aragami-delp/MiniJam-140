//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Inputs/BaseInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @BaseInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @BaseInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""BaseInput"",
    ""maps"": [
        {
            ""name"": ""CartInput"",
            ""id"": ""f9e61fad-fa86-4cd1-ba41-853998808b28"",
            ""actions"": [
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""ec64003d-7a8f-45d5-84c5-874b468d8e4a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""1e8d810d-0717-4b26-9bf0-29f9ae95cb75"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SwitchToPotion1"",
                    ""type"": ""Button"",
                    ""id"": ""e352ec71-4db6-4482-b2b7-135188a16cc3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToPotion2"",
                    ""type"": ""Button"",
                    ""id"": ""b8b13e99-5348-4d75-8163-0d990ef49aaa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToPotion3"",
                    ""type"": ""Button"",
                    ""id"": ""6aa66967-6fe6-48be-8709-42793ffca6e6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToPotion4"",
                    ""type"": ""Button"",
                    ""id"": ""f52d647b-daa3-45af-bc2f-3ff1b3f1517f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchToNextPotion"",
                    ""type"": ""Button"",
                    ""id"": ""f2a599b4-4151-4b19-825c-4acb4ff2a7dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Break"",
                    ""type"": ""Button"",
                    ""id"": ""5e5c683b-d8ce-42b1-bebc-fb652028a87a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""37253a98-1901-494d-9fdb-7efc0e415161"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3fa0d904-b46b-489c-96d2-bf2b57075b6c"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1aaa04f-ea1d-484c-b6bf-49188d042f97"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToPotion1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35c69cfb-747d-4a88-87a1-eb3a6bfba64c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToPotion2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a953e12d-fa0b-49e2-bec1-ed13fcd0c3ba"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToPotion3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12c125b9-92d5-47b6-99a5-5fc1ccb81d99"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToPotion4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e70ebc98-70c7-4917-b701-0aaf28ced991"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchToNextPotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b71bab15-e9ad-4fe0-9e12-63e96e5e2314"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Break"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e87c69ed-7634-4d37-8e7b-e62fc10f9e35"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Break"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CartInput
        m_CartInput = asset.FindActionMap("CartInput", throwIfNotFound: true);
        m_CartInput_Shoot = m_CartInput.FindAction("Shoot", throwIfNotFound: true);
        m_CartInput_MousePosition = m_CartInput.FindAction("MousePosition", throwIfNotFound: true);
        m_CartInput_SwitchToPotion1 = m_CartInput.FindAction("SwitchToPotion1", throwIfNotFound: true);
        m_CartInput_SwitchToPotion2 = m_CartInput.FindAction("SwitchToPotion2", throwIfNotFound: true);
        m_CartInput_SwitchToPotion3 = m_CartInput.FindAction("SwitchToPotion3", throwIfNotFound: true);
        m_CartInput_SwitchToPotion4 = m_CartInput.FindAction("SwitchToPotion4", throwIfNotFound: true);
        m_CartInput_SwitchToNextPotion = m_CartInput.FindAction("SwitchToNextPotion", throwIfNotFound: true);
        m_CartInput_Break = m_CartInput.FindAction("Break", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CartInput
    private readonly InputActionMap m_CartInput;
    private List<ICartInputActions> m_CartInputActionsCallbackInterfaces = new List<ICartInputActions>();
    private readonly InputAction m_CartInput_Shoot;
    private readonly InputAction m_CartInput_MousePosition;
    private readonly InputAction m_CartInput_SwitchToPotion1;
    private readonly InputAction m_CartInput_SwitchToPotion2;
    private readonly InputAction m_CartInput_SwitchToPotion3;
    private readonly InputAction m_CartInput_SwitchToPotion4;
    private readonly InputAction m_CartInput_SwitchToNextPotion;
    private readonly InputAction m_CartInput_Break;
    public struct CartInputActions
    {
        private @BaseInput m_Wrapper;
        public CartInputActions(@BaseInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Shoot => m_Wrapper.m_CartInput_Shoot;
        public InputAction @MousePosition => m_Wrapper.m_CartInput_MousePosition;
        public InputAction @SwitchToPotion1 => m_Wrapper.m_CartInput_SwitchToPotion1;
        public InputAction @SwitchToPotion2 => m_Wrapper.m_CartInput_SwitchToPotion2;
        public InputAction @SwitchToPotion3 => m_Wrapper.m_CartInput_SwitchToPotion3;
        public InputAction @SwitchToPotion4 => m_Wrapper.m_CartInput_SwitchToPotion4;
        public InputAction @SwitchToNextPotion => m_Wrapper.m_CartInput_SwitchToNextPotion;
        public InputAction @Break => m_Wrapper.m_CartInput_Break;
        public InputActionMap Get() { return m_Wrapper.m_CartInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CartInputActions set) { return set.Get(); }
        public void AddCallbacks(ICartInputActions instance)
        {
            if (instance == null || m_Wrapper.m_CartInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CartInputActionsCallbackInterfaces.Add(instance);
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @SwitchToPotion1.started += instance.OnSwitchToPotion1;
            @SwitchToPotion1.performed += instance.OnSwitchToPotion1;
            @SwitchToPotion1.canceled += instance.OnSwitchToPotion1;
            @SwitchToPotion2.started += instance.OnSwitchToPotion2;
            @SwitchToPotion2.performed += instance.OnSwitchToPotion2;
            @SwitchToPotion2.canceled += instance.OnSwitchToPotion2;
            @SwitchToPotion3.started += instance.OnSwitchToPotion3;
            @SwitchToPotion3.performed += instance.OnSwitchToPotion3;
            @SwitchToPotion3.canceled += instance.OnSwitchToPotion3;
            @SwitchToPotion4.started += instance.OnSwitchToPotion4;
            @SwitchToPotion4.performed += instance.OnSwitchToPotion4;
            @SwitchToPotion4.canceled += instance.OnSwitchToPotion4;
            @SwitchToNextPotion.started += instance.OnSwitchToNextPotion;
            @SwitchToNextPotion.performed += instance.OnSwitchToNextPotion;
            @SwitchToNextPotion.canceled += instance.OnSwitchToNextPotion;
            @Break.started += instance.OnBreak;
            @Break.performed += instance.OnBreak;
            @Break.canceled += instance.OnBreak;
        }

        private void UnregisterCallbacks(ICartInputActions instance)
        {
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @SwitchToPotion1.started -= instance.OnSwitchToPotion1;
            @SwitchToPotion1.performed -= instance.OnSwitchToPotion1;
            @SwitchToPotion1.canceled -= instance.OnSwitchToPotion1;
            @SwitchToPotion2.started -= instance.OnSwitchToPotion2;
            @SwitchToPotion2.performed -= instance.OnSwitchToPotion2;
            @SwitchToPotion2.canceled -= instance.OnSwitchToPotion2;
            @SwitchToPotion3.started -= instance.OnSwitchToPotion3;
            @SwitchToPotion3.performed -= instance.OnSwitchToPotion3;
            @SwitchToPotion3.canceled -= instance.OnSwitchToPotion3;
            @SwitchToPotion4.started -= instance.OnSwitchToPotion4;
            @SwitchToPotion4.performed -= instance.OnSwitchToPotion4;
            @SwitchToPotion4.canceled -= instance.OnSwitchToPotion4;
            @SwitchToNextPotion.started -= instance.OnSwitchToNextPotion;
            @SwitchToNextPotion.performed -= instance.OnSwitchToNextPotion;
            @SwitchToNextPotion.canceled -= instance.OnSwitchToNextPotion;
            @Break.started -= instance.OnBreak;
            @Break.performed -= instance.OnBreak;
            @Break.canceled -= instance.OnBreak;
        }

        public void RemoveCallbacks(ICartInputActions instance)
        {
            if (m_Wrapper.m_CartInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICartInputActions instance)
        {
            foreach (var item in m_Wrapper.m_CartInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CartInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CartInputActions @CartInput => new CartInputActions(this);
    public interface ICartInputActions
    {
        void OnShoot(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnSwitchToPotion1(InputAction.CallbackContext context);
        void OnSwitchToPotion2(InputAction.CallbackContext context);
        void OnSwitchToPotion3(InputAction.CallbackContext context);
        void OnSwitchToPotion4(InputAction.CallbackContext context);
        void OnSwitchToNextPotion(InputAction.CallbackContext context);
        void OnBreak(InputAction.CallbackContext context);
    }
}
